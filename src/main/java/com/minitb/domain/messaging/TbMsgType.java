package com.minitb.domain.messaging;

/**
 * 业务消息类型枚举
 * 
 * 设计说明:
 * 业务消息类型 (TbMsgType) 用于描述 TbMsg 的数据内容类型，决定规则引擎如何处理业务逻辑
 * 
 * 与 Actor 消息类型 (ActorMsgType) 的区别:
 * - ActorMsgType: Actor 层面，决定"消息发给谁" (路由)
 * - TbMsgType: 业务层面，决定"消息是什么" (业务逻辑)
 * 
 * 类比: 
 * - ActorMsgType 是信封上的地址
 * - TbMsgType 是信件内容的类型 (账单/通知/请求等)
 * 
 * 使用场景:
 * - 规则节点根据 TbMsgType 过滤消息
 * - 规则链根据 TbMsgType 路由到不同的处理分支
 * - 告警规则根据 TbMsgType 触发不同的告警
 */
public enum TbMsgType {
    
    // ==========================================
    // 设备数据上报 (Device Data)
    // ==========================================
    
    /**
     * 上报遥测数据
     * 例如: 温度、湿度、压力等传感器数据
     */
    POST_TELEMETRY_REQUEST,
    
    /**
     * 上报属性数据
     * 例如: 设备配置、固件版本等
     */
    POST_ATTRIBUTES_REQUEST,
    
    /**
     * 设备发起的 RPC 请求
     * 例如: 设备请求获取配置、上传日志等
     */
    TO_SERVER_RPC_REQUEST,
    
    // ==========================================
    // 连接事件 (Connection Events)
    // ==========================================
    
    /**
     * 设备连接事件
     * 当设备首次连接或重新连接时触发
     */
    CONNECT_EVENT,
    
    /**
     * 设备断开连接事件
     * 当设备断开连接时触发
     */
    DISCONNECT_EVENT,
    
    /**
     * 设备活动事件
     * 当设备有数据活动时触发
     */
    ACTIVITY_EVENT,
    
    /**
     * 设备不活动事件
     * 当设备长时间无数据上报时触发
     */
    INACTIVITY_EVENT,
    
    // ==========================================
    // 实体生命周期 (Entity Lifecycle)
    // ==========================================
    
    /**
     * 实体创建事件
     * 当设备、资产等实体被创建时触发
     */
    ENTITY_CREATED,
    
    /**
     * 实体更新事件
     * 当设备、资产等实体信息被更新时触发
     */
    ENTITY_UPDATED,
    
    /**
     * 实体删除事件
     * 当设备、资产等实体被删除时触发
     */
    ENTITY_DELETED,
    
    // ==========================================
    // 告警相关 (Alarms)
    // ==========================================
    
    /**
     * 告警触发
     * 当告警条件满足时创建告警
     */
    ALARM,
    
    /**
     * 告警清除
     * 当告警条件不再满足时清除告警
     */
    ALARM_CLEAR,
    
    // ==========================================
    // 其他 (Others)
    // ==========================================
    
    /**
     * 自定义消息类型
     * 用于用户自定义的业务逻辑
     */
    CUSTOM
}




